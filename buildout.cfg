[buildout]
develop = .
parts =
#    gwt-sdk
#    jsonrpcclient-build
#    jsonrpcclient
    jsongae
    nosetests

#[gwt-sdk]
#recipe = collective.recipe.cmd:py
#on_install = true
#cmds =
#    >>> import subprocess, sys
#    >>> from zc.buildout.download import Download
#    >>> url = 'http://google-web-toolkit.googlecode.com/files/gwt-2.0.3.zip'
#    >>> cache = os.path.join('${buildout:directory}', 'downloads')
#    >>> if not os.path.isdir(cache):
#    ...   os.mkdir(cache)
#    >>> download = Download(cache=cache)
#    >>> path, is_temp = download(url)
#    >>> os.chdir("${buildout:directory}/parts")
#    >>> subprocess.call(['unzip', path])

#[jsonrpcclient-build]
#recipe = collective.recipe.template
#gwt.sdk = ${buildout:directory}/parts/gwt-2.0.3
#input = ${buildout:directory}/src/jsonrpcclient/build.xml.in
#output = ${buildout:directory}/src/jsonrpcclient/build.xml

#[jsonrpcclient]
#recipe = collective.recipe.cmd:py
#on_install = true
#cmds =
#    >>> import subprocess
#    >>> src = "${buildout:directory}/src/jsonrpcclient"
#    >>> os.chdir(src)
#    >>> subprocess.call(['ant'])

[jsongae]
recipe = rod.recipe.appengine
url = http://googleappengine.googlecode.com/files/google_appengine_1.3.4.zip
server-script = dev_appserver
packages =
    chameleon
exclude = tests
zip-packages = False

[nosetests]
recipe = zc.recipe.egg
eggs =
    NoseGAE
    WebTest
    jsongae
    nose
extra-paths =
    ${buildout:directory}/parts/google_appengine
    ${buildout:directory}/parts/google_appengine/lib/antlr3
    ${buildout:directory}/parts/google_appengine/lib/django
    ${buildout:directory}/parts/google_appengine/lib/webob
    ${buildout:directory}/parts/google_appengine/lib/yaml/lib
interpreter = python
